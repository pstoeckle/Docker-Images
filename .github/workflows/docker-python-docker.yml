name: "Build and deploy the Python+Docker image"

on:
  release:
    types: [published]
  push:
    paths:
      - ".github/workflows/docker-python-docker.yml"
      - "docker-python-docker/Dockerfile"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/docker

jobs:
  python39:
    env:
      CURRENT_BASE_IMAGE: python
      CURRENT_BASE_IMAGE_VERSION: "3.9"
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.CURRENT_BASE_IMAGE }}-${{ env.CURRENT_BASE_IMAGE_VERSION }}
          tags: |
            type=sha
            type=ref,event=tag

      - name: Build and push the Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          build-args: |
            BASE_IMAGE=${{ env.CURRENT_BASE_IMAGE }}
            BASE_IMAGE_VERSION=${{ env.CURRENT_BASE_IMAGE_VERSION }}
          context: docker-python-docker
          file: docker-python-docker/Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  python310:
    env:
      CURRENT_BASE_IMAGE: python
      CURRENT_BASE_IMAGE_VERSION: "3.10"
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.CURRENT_BASE_IMAGE }}-${{ env.CURRENT_BASE_IMAGE_VERSION }}
          tags: |
            type=sha
            type=ref,event=tag

      - name: Build and push the Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          build-args: |
            BASE_IMAGE=${{ env.CURRENT_BASE_IMAGE }}
            BASE_IMAGE_VERSION=${{ env.CURRENT_BASE_IMAGE_VERSION }}
          context: docker-python-docker
          file: docker-python-docker/Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  python36:
    env:
      CURRENT_BASE_IMAGE: python
      CURRENT_BASE_IMAGE_VERSION: "3.6"
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.CURRENT_BASE_IMAGE }}-${{ env.CURRENT_BASE_IMAGE_VERSION }}
          tags: |
            type=sha
            type=ref,event=tag

      - name: Build and push the Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          build-args: |
            BASE_IMAGE=${{ env.CURRENT_BASE_IMAGE }}
            BASE_IMAGE_VERSION=${{ env.CURRENT_BASE_IMAGE_VERSION }}
          context: docker-python-docker
          file: docker-python-docker/Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

   python37:
    env:
      CURRENT_BASE_IMAGE: python
      CURRENT_BASE_IMAGE_VERSION: "3.7"
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.CURRENT_BASE_IMAGE }}-${{ env.CURRENT_BASE_IMAGE_VERSION }}
          tags: |
            type=sha
            type=ref,event=tag

      - name: Build and push the Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          build-args: |
            BASE_IMAGE=${{ env.CURRENT_BASE_IMAGE }}
            BASE_IMAGE_VERSION=${{ env.CURRENT_BASE_IMAGE_VERSION }}
          context: docker-python-docker
          file: docker-python-docker/Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # python38:
  #   env:
  #     CURRENT_BASE_IMAGE: python
  #     CURRENT_BASE_IMAGE_VERSION: "3.8"
  #   permissions:
  #     contents: read
  #     packages: write
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Log in to the Container registry
  #       uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.CURRENT_BASE_IMAGE }}-${{ env.CURRENT_BASE_IMAGE_VERSION }}
  #         tags: |
  #           type=sha
  #           type=ref,event=tag

  #     - name: Build and push the Docker image
  #       uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
  #       with:
  #         build-args: |
  #           BASE_IMAGE=${{ env.CURRENT_BASE_IMAGE }}
  #           BASE_IMAGE_VERSION=${{ env.CURRENT_BASE_IMAGE_VERSION }}
  #         context: docker-python-docker
  #         file: docker-python-docker/Dockerfile
  #         push: true
  #         tags: |
  #           ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
