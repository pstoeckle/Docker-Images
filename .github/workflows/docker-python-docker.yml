name: "Build and deploy the Python+Docker image"

on:
  release:
    types: [published]
  push:
    paths:
      - ".github/workflows/docker-python-docker.yml"
      - "docker-python-docker/Dockerfile"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/docker

jobs:
  python39:
    env:
      CURRENT_BASE_IMAGE: python
      CURRENT_BASE_IMAGE_VERSION: "3.9"
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@5b7b28b1cc417bbd34cd8c225a957c9ce9adf7f2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@032a4b3bda1b716928481836ac5bfe36e1feaad6
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.CURRENT_BASE_IMAGE }}-${{ env.CURRENT_BASE_IMAGE_VERSION }}
          tags: |
            type=sha
            type=ref,event=tag

      - name: Build and push the Docker image
        uses: docker/build-push-action@cb8fc7586f9ad9441b20c33e0f6e8b1b58d8b4c6
        with:
          build-args: |
            BASE_IMAGE=${{ env.CURRENT_BASE_IMAGE }}
            BASE_IMAGE_VERSION=${{ env.CURRENT_BASE_IMAGE_VERSION }}
          context: docker-python-docker
          file: docker-python-docker/Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  python310:
    env:
      CURRENT_BASE_IMAGE: python
      CURRENT_BASE_IMAGE_VERSION: "3.10"
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@5b7b28b1cc417bbd34cd8c225a957c9ce9adf7f2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@032a4b3bda1b716928481836ac5bfe36e1feaad6
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.CURRENT_BASE_IMAGE }}-${{ env.CURRENT_BASE_IMAGE_VERSION }}
          tags: |
            type=sha
            type=ref,event=tag

      - name: Build and push the Docker image
        uses: docker/build-push-action@cb8fc7586f9ad9441b20c33e0f6e8b1b58d8b4c6
        with:
          build-args: |
            BASE_IMAGE=${{ env.CURRENT_BASE_IMAGE }}
            BASE_IMAGE_VERSION=${{ env.CURRENT_BASE_IMAGE_VERSION }}
          context: docker-python-docker
          file: docker-python-docker/Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  python36:
    env:
      CURRENT_BASE_IMAGE: python
      CURRENT_BASE_IMAGE_VERSION: "3.6"
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@5b7b28b1cc417bbd34cd8c225a957c9ce9adf7f2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@032a4b3bda1b716928481836ac5bfe36e1feaad6
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.CURRENT_BASE_IMAGE }}-${{ env.CURRENT_BASE_IMAGE_VERSION }}
          tags: |
            type=sha
            type=ref,event=tag

      - name: Build and push the Docker image
        uses: docker/build-push-action@cb8fc7586f9ad9441b20c33e0f6e8b1b58d8b4c6
        with:
          build-args: |
            BASE_IMAGE=${{ env.CURRENT_BASE_IMAGE }}
            BASE_IMAGE_VERSION=${{ env.CURRENT_BASE_IMAGE_VERSION }}
          context: docker-python-docker
          file: docker-python-docker/Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  python37:
    env:
      CURRENT_BASE_IMAGE: python
      CURRENT_BASE_IMAGE_VERSION: "3.7"
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@5b7b28b1cc417bbd34cd8c225a957c9ce9adf7f2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@032a4b3bda1b716928481836ac5bfe36e1feaad6
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.CURRENT_BASE_IMAGE }}-${{ env.CURRENT_BASE_IMAGE_VERSION }}
          tags: |
            type=sha
            type=ref,event=tag

      - name: Build and push the Docker image
        uses: docker/build-push-action@cb8fc7586f9ad9441b20c33e0f6e8b1b58d8b4c6
        with:
          build-args: |
            BASE_IMAGE=${{ env.CURRENT_BASE_IMAGE }}
            BASE_IMAGE_VERSION=${{ env.CURRENT_BASE_IMAGE_VERSION }}
          context: docker-python-docker
          file: docker-python-docker/Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  python38:
    env:
      CURRENT_BASE_IMAGE: python
      CURRENT_BASE_IMAGE_VERSION: "3.8"
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@5b7b28b1cc417bbd34cd8c225a957c9ce9adf7f2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@032a4b3bda1b716928481836ac5bfe36e1feaad6
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.CURRENT_BASE_IMAGE }}-${{ env.CURRENT_BASE_IMAGE_VERSION }}
          tags: |
            type=sha
            type=ref,event=tag

      - name: Build and push the Docker image
        uses: docker/build-push-action@cb8fc7586f9ad9441b20c33e0f6e8b1b58d8b4c6
        with:
          build-args: |
            BASE_IMAGE=${{ env.CURRENT_BASE_IMAGE }}
            BASE_IMAGE_VERSION=${{ env.CURRENT_BASE_IMAGE_VERSION }}
          context: docker-python-docker
          file: docker-python-docker/Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
